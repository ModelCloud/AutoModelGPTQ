name: Unit Tests (GPU)

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      repo:
        description: 'GitHub repo {owner}/{repo}'
        required: false
        default: ''
      ref:
        description: 'branch, tag or SHA'
        required: false
        default: ''

env:
  CUDA_DEVICE_ORDER: PCI_BUS_ID

jobs:
  build:
    runs-on: self-hosted
    container:
      image: modelcloud/gptqmodel:github-ci-v1
    steps:
      - name: Checkout Codes
        uses: actions/checkout@v4
        with:
          repository: ${{ github.event.inputs.repo }}
          ref: ${{ github.event.inputs.ref }}

      - name: Compile
        shell: bash
        run: python setup.py bdist_wheel

      - name: Show dist folder
        run: ls -alh dist

      - name: Upload to artifact
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist

  test:
    needs: build
    runs-on: self-hosted
    container:
      image: modelcloud/gptqmodel:github-ci-v1
    strategy:
      fail-fast: false
      matrix:
        test_script: [ "test_perplexity.py", "test_lm_head.py", "test_q4_exllama.py", "test_q4_exllama_v2.py", "test_q4_marlin.py", "test_q4_triton.py", "test_repacking.py", "test_serialization.py", "test_sharded.py", "test_triton.py", "test_quant_formats.py", "test_q4_cuda.py", "test_q4_bitblas.py" ]

    steps:
      - name: Checkout Codes
        uses: actions/checkout@v4
        with:
          repository: ${{ github.event.inputs.repo }}
          ref: ${{ github.event.inputs.ref }}

      - name: Show folder
        run: |
          ls -alh . || true
          ls -alh dist || true
          rm -rf dist/* || true

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist

      - name: Show dist folder
        run: ls -alh dist || true

      - name: Install wheel
        shell: bash
        run: |
          pip install dist/*.whl

      - name: Find suitable GPU
        shell: bash
        run: |
          gpu_id=-1
          
          while [ "$gpu_id" -lt 0 ]; do
            gpu_id=$(curl -s "http://10.0.13.154/gpu/get?id=${{ github.run_id }}")
          
            if [ "$gpu_id" -lt 0 ]; then
              echo "No available GPU, waiting 5 seconds..."
              sleep 5
            else
              echo "Allocated GPU ID: $gpu_id"
            fi
          done
          echo "CUDA_VISIBLE_DEVICES=$gpu_id" >> $GITHUB_ENV
          echo "CUDA_VISIBLE_DEVICES set to $gpu_id"

      - name: Run tests
        run: pytest tests/${{ matrix.test_script }}

      - name: Release GPU
        if: always()
        shell: bash
        run: curl -X GET "http://10.0.13.154/gpu/release?id=${{ github.run_id }}&gpu=$CUDA_VISIBLE_DEVICES"
