name: Unit Tests

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      repo:
        description: 'GitHub repo {owner}/{repo}'
        required: false
        default: ''
      ref:
        description: 'Branch, Tag or Commit SHA'
        required: false
        default: ''

env:
  CUDA_DEVICE_ORDER: PCI_BUS_ID
  CPU_TEST_FILES: "test_qbits.py"

jobs:
  build:
    runs-on: self-hosted
    container:
      image: 10.0.13.154:5000/modelcloud/gptqmodel:github-ci-v2
    steps:
      - name: Checkout Codes
        uses: actions/checkout@v4
        with:
          repository: ${{ github.event.inputs.repo }}
          ref: ${{ github.event.inputs.ref }}

      - name: Compile
        shell: bash
        run: python setup.py bdist_wheel

      - name: Show dist folder
        run: ls -alh dist

      - name: Upload to artifact
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist

  gpu-test-files:
    runs-on: ubuntu-latest
    outputs:
      files: ${{ steps.files.outputs.files }}
    steps:
      - name: Checkout Codes
        uses: actions/checkout@v4
        with:
          repository: ${{ github.event.inputs.repo }}
          ref: ${{ github.event.inputs.ref }}

      - name: List files
        id: files
        shell: bash
        run: |
          IFS=', ' read -r -a cpu_test_files <<< "${CPU_TEST_FILES}"
          exclude_files=""
          for file in "${cpu_test_files[@]}"; do
            exclude_files+="! -name $file "
          done
          scripts=$(find tests -type f -name "test_*.py" $exclude_files | sed 's|tests/||')
          json_array=$(echo "[\"$(echo $scripts | sed 's/ /", "/g')\"]")
          echo "files=$json_array" >> "$GITHUB_OUTPUT"
          echo "GPU test files: $json_array"

  cpu-test-files:
    runs-on: ubuntu-latest
    outputs:
      files: ${{ steps.files.outputs.files }}
    steps:
      - name: Checkout Codes
        uses: actions/checkout@v4
        with:
          repository: ${{ github.event.inputs.repo }}
          ref: ${{ github.event.inputs.ref }}

      - name: List files
        id: files
        shell: bash
        run: |
          IFS=',' read -r -a cpu_test_files <<< "${CPU_TEST_FILES}"
          json_array=$(printf '"%s",' "${cpu_test_files[@]}")
          json_array="[${json_array%,}]"
          echo "files=$json_array" >> "$GITHUB_OUTPUT"
          echo "CPU test files: $json_array"

  test_gpu:
    needs:
      - build
      - gpu-test-files
    runs-on: self-hosted
    container:
      image: 10.0.13.154:5000/modelcloud/gptqmodel:github-ci-v2
    strategy:
      fail-fast: false
      matrix:
        test_script: ${{ fromJSON(needs.gpu-test-files.outputs.files) }}

    steps:
      - name: Checkout Codes
        uses: actions/checkout@v4
        with:
          repository: ${{ github.event.inputs.repo }}
          ref: ${{ github.event.inputs.ref }}

      - name: Show folder
        run: |
          ls -alh . || true
          ls -alh dist || true
          rm -rf dist/* || true

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist

      - name: Show dist folder
        run: ls -alh dist || true

      - name: Install wheel
        shell: bash
        run: |
          pip install dist/*.whl

      - name: Find suitable GPU
        shell: bash
        run: |
          gpu_id=-1
          
          while [ "$gpu_id" -lt 0 ]; do
            gpu_id=$(curl -s "http://10.0.13.154/gpu/get?id=${{ github.run_id }}")
          
            if [ "$gpu_id" -lt 0 ]; then
              echo "No available GPU, waiting 5 seconds..."
              sleep 5
            else
              echo "Allocated GPU ID: $gpu_id"
            fi
          done
          echo "CUDA_VISIBLE_DEVICES=$gpu_id" >> $GITHUB_ENV
          echo "CUDA_VISIBLE_DEVICES set to $gpu_id"

      - name: Run tests
        run: pytest --durations=0 tests/${{ matrix.test_script }}

      - name: Release GPU
        if: always()
        shell: bash
        run: curl -X GET "http://10.0.13.154/gpu/release?id=${{ github.run_id }}&gpu=$CUDA_VISIBLE_DEVICES"

  test_cpu:
    needs:
      - build
      - cpu-test-files
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        test_script:  ${{ fromJSON(needs.cpu-test-files.outputs.files) }}

    steps:
      - name: Checkout Codes
        uses: actions/checkout@v4
        with:
          repository: ${{ github.event.inputs.repo }}
          ref: ${{ github.event.inputs.ref }}

      - name: Setup python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          cache: 'pip'

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist

      - name: Install wheel
        shell: bash
        run: |
          pip install dist/*.whl

      - name: Run tests
        run: pytest --durations=0 tests/${{ matrix.test_script }}

